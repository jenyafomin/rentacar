// import { Router } from "next/router";
import { transitionPage } from "../EremiaType";
import { tdEnd, tdStart } from "./transitionDefalut";
import { AppRouterInstance } from "next/dist/shared/lib/app-router-context.shared-runtime";

export function handleTransitionToUrl({transitionPage ,href, router}: {transitionPage?: transitionPage,href: string, router: AppRouterInstance}) {
  const domTransition: {
    current: HTMLDivElement | null;
    tl: gsap.core.Timeline | null;
  } = {
    current: null,
    tl: null,
  };

  return (e: any, dinamicHref?: string) => {
    if(e?.preventDefault) e.preventDefault();
    if(dinamicHref) href = dinamicHref;

    if (domTransition.current === null && domTransition.tl === null) {
      // –°—Ä–∞–∑—É —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∞–Ω–∏–º–∞—Ü–∏–∏
      window.scrollTo({ top: 0, behavior: 'instant' });
      
      // –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–æ–ª–ª–∞
      if ('scrollRestoration' in history) {
        history.scrollRestoration = 'manual';
      }
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –≤—Ö–æ–¥–∞
      [domTransition.current, domTransition.tl] = tdStart(transitionPage);
      
      // –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ —á–µ—Ä–µ–∑ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è (—á—Ç–æ–±—ã –∞–Ω–∏–º–∞—Ü–∏—è —É—Å–ø–µ–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è)
      domTransition.tl.to({}, { duration: 0.8 }); // –ë–∞–∑–æ–≤–∞—è –∞–Ω–∏–º–∞—Ü–∏—è 0.8 —Å–µ–∫
      
      // –î–æ–±–∞–≤–ª—è–µ–º callback –ø–æ—Å–ª–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
      domTransition.tl.add(() => {
        console.log('üöÄ Starting page transition to:', href);
        const startTime = Date.now();
        
        // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ—Ö–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        router.push(href);
        
        // –£–º–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
        const waitForPageLoad = () => {
          let attempts = 0;
          const maxAttempts = 60; // 3 —Å–µ–∫—É–Ω–¥—ã –º–∞–∫—Å–∏–º—É–º (50–º—Å * 60)
          const minAttempts = 4; // –ú–∏–Ω–∏–º—É–º 200–º—Å –æ–∂–∏–¥–∞–Ω–∏—è
          
          const checkLoad = () => {
            attempts++;
            const elapsed = Date.now() - startTime;
            
            // –£—Å–ª–æ–≤–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:
            // 1. –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≥–æ—Ç–æ–≤–∞ –ò –ø—Ä–æ—à–ª–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
            // 2. –ü—Ä–æ—à–ª–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è (fallback)
            const isPageReady = document.readyState === 'complete';
            const minTimeElapsed = attempts >= minAttempts;
            const maxTimeElapsed = attempts >= maxAttempts;
            
            if ((isPageReady && minTimeElapsed) || maxTimeElapsed) {
              const loadTime = elapsed;
              console.log(`‚úÖ Page loaded in ${loadTime}ms, starting exit animation`);
              
              // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ —Å–∫—Ä–æ–ª–ª —Å–±—Ä–æ—à–µ–Ω
              window.scrollTo({ top: 0, behavior: 'instant' });
              
              // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â—É—é –∞–Ω–∏–º–∞—Ü–∏—é
              if (domTransition.tl) {
                domTransition.tl.kill();
                domTransition.tl = null;
              }
              domTransition.current = null;
              
              // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –≤—ã—Ö–æ–¥–∞
              tdEnd();
              
            } else {
              // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∂–¥–∞—Ç—å
              setTimeout(checkLoad, 50);
            }
          };
          
          // –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ä–∞–∑—É
          checkLoad();
        };
        
        waitForPageLoad();
      });
      
      // –î–æ–±–∞–≤–ª—è–µ–º –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω—É—é –ø–∞—É–∑—É –∫–∞–∫ fallback
      domTransition.tl.to({}, { duration: 10 }); // –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
    }
  };
}
